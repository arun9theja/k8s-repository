apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aws-node-termination-handler
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/component: daemonset
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-node-termination-handler
      app.kubernetes.io/instance: aws-node-termination-handler
      app.kubernetes.io/component: daemonset
      kubernetes.io/os: linux
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-node-termination-handler
        app.kubernetes.io/instance: aws-node-termination-handler
        app.kubernetes.io/component: daemonset
        kubernetes.io/os: linux
        k8s-app: aws-node-termination-handler
    spec:
      serviceAccountName: aws-node-termination-handler
      securityContext:
        fsGroup: 1000
      priorityClassName: system-node-critical
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: aws-node-termination-handler
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
        image: public.ecr.aws/aws-ec2/aws-node-termination-handler:v1.18.2
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ENABLE_PROBES_SERVER
          value: "false"
        - name: PROBES_SERVER_PORT
          value: "8080"
        - name: PROBES_SERVER_ENDPOINT
          value: "/healthz"
        - name: EXCLUDE_FROM_LOAD_BALANCERS
          value: "false"
        - name: DELETE_LOCAL_DATA
          value: "true"
        - name: IGNORE_DAEMON_SETS
          value: "true"
        - name: ENABLE_SQS_TERMINATION_DRAINING
          value: "false"
        - name: UPTIME_FROM_FILE
          value: "/proc/uptime"
        volumeMounts:
        - name: uptime
          mountPath: /proc/uptime
          readOnly: true
      volumes:
      - name: uptime
        hostPath:
          path: /proc/uptime
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/compute-type
                operator: NotIn
                values:
                - fargate
      tolerations:
      - operator: Exists
