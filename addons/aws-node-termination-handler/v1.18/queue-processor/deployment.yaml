apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-node-termination-handler
  labels:
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/component: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-node-termination-handler
      app.kubernetes.io/instance: aws-node-termination-handler
      app.kubernetes.io/component: deployment
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-node-termination-handler
        app.kubernetes.io/instance: aws-node-termination-handler
        app.kubernetes.io/component: deployment
        k8s-app: aws-node-termination-handler
    spec:
      serviceAccountName: aws-node-termination-handler
      securityContext:
        fsGroup: 1000
      priorityClassName: system-cluster-critical
      containers:
      - name: aws-node-termination-handler
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        image: public.ecr.aws/aws-ec2/aws-node-termination-handler:v1.18.2
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ENABLE_PROBES_SERVER
          value: "true"
        - name: PROBES_SERVER_PORT
          value: "8080"
        - name: PROBES_SERVER_ENDPOINT
          value: "/healthz"
        - name: EXCLUDE_FROM_LOAD_BALANCERS
          value: "false"
        - name: DELETE_LOCAL_DATA
          value: "true"
        - name: IGNORE_DAEMON_SETS
          value: "true"
        - name: ENABLE_SQS_TERMINATION_DRAINING
          value: "true"
        - name: QUEUE_URL
          value: ""
        - name: WORKERS
          value: "10"
        ports:
        - name: liveness-probe
          protocol: TCP
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/os: linux
